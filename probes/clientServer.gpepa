rr = 2.0; 
rtmt = 0.3; 
rt = 0.27;
rb = 0.1; 
rd = 1.0; 
rrst = 1.0; 

n = 100; 
m = 60.0;

Client = (request,rr).Client_waiting;
Client_waiting = (data,rd).Client_think;
Client_think = (think,rt).Client; 

Server = (request,rr).Server_get + (break,rb).Server_broken;
Server_get = (data,rd).Server;
Server_broken = (reset,rrst).Server;


Clients{Client[n]}<request,data> Servers{Server[m]}



Probe ["tmp/probes/clientServer/steady.dat"] (stopTime = 40.0, stepSize=0.1, density=10)
	steady 300
	{
		GProbe = begin: start, end:stop <-
		observes {
			LProbe = eE: begin, think:end <-
		}
		where {
			Clients{Client[n]} =>
				Clients{(Client<*>LProbe)|Client[n-1]}
		}
	}
	

	
SimProbe ["tmp/probes/clientServer/steady_sim.dat"] (stopTime = 40.0, stepSize=0.1, replications=1000)
	steady 300
	{
		GProbe = begin: start, end:stop <-
		observes {
			LProbe = eE: begin, think:end <-
		}
		where {
			Clients{Client[n]} =>
				Clients{(Client<*>LProbe)|Client[n-1]}
		}
	}

Probe ["tmp/probes/clientServer/transient.dat"] (stopTime = 40.0, stepSize=0.1, density=10)
	transient 30
	{
		GProbe = begin: start, end:stop
		observes {
			LProbe = eE: begin, think:end
		}
		where {
			Clients{Client[n]} =>
				Clients{(Client<*>LProbe)|Client[n-1]}
		}
	}
	
	
		
	
	
SimProbe ["tmp/probes/clientServer/transient_sim.dat"] (stopTime = 40.0, stepSize=0.1, replications=1000)
	transient 30
	{
		GProbe = begin: start, end:stop
		observes {
			LProbe = eE: begin, think:end
		}
		where {
			Clients{Client[n]} =>
				Clients{(Client<*>LProbe)|Client[n-1]}
		}
	}
	
	
Probe["tmp/probes/clientServer/global.dat"] (stopTime = 40.0, stepSize=0.1, density=10)	
	{
		GPT = eE: start, end[n/2]:stop
		observes {
			LProbe = think:end
		}
		where {
			Clients{Client[n]} =>
				Clients{(Client<*>LProbe)[n]}
		}
	}
	
SimProbe["tmp/probes/clientServer/global_sim.dat"] (stopTime = 40.0, stepSize=0.1, replications=1000)	
	{
		GPT = eE: start, end[n/2]:stop
		observes {
			LProbe = think:end
		}
		where {
			Clients{Client[n]} =>
				Clients{(Client<*>LProbe)[n]}
		}
	}		
	
	
	
Probe["tmp/probes/clientServer/global10.dat"] (stopTime = 40.0, stepSize=0.1, density=10)	
	{
		GPT = eE: start, end[n/2]:stop
		observes {
			LProbe = think:end
		}
		where {
			Clients{Client[n]} =>
				Clients{(Client<*>LProbe)[n*10]}
		}
	}
	
SimProbe["tmp/probes/clientServer/global_sim10.dat"] (stopTime = 40.0, stepSize=0.1, replications=1000)	
	{
		GPT = eE: start, end[n/2]:stop
		observes {
			LProbe = think:end
		}
		where {
			Clients{Client[n]} =>
				Clients{(Client<*>LProbe)[n*10]}
		}
	}		